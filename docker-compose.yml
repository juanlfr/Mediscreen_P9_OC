version: '3.1'
services:

  mysql:
    image: mysql:8.0.27
    container_name: mysql
    environment:
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "user"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "mediscreen"
      MYSQL_TCP_PORT: 3307
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - "3307:3307"
    volumes:
      - ./data_mysql:/docker-entrypoint-initdb.d/
    networks:
      - mediscreen

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mediscreen
  mongo_seeder:
    build: ./mongo_seed/
    image: mongo_seeder
    depends_on:
      - mongo
    networks:
      - mediscreen

  notes:
    build: ./mediscreen-notes/
    image: juanlfr/mediscreen_p9_oc/mediscreen-notes
    container_name: notes
    environment:
      - spring.data.mongodb.repositories.enabled=true
      - spring.data.mongodb.uri=mongodb://mongo:27017/Notes
    ports:
      - "8081:8081"
    expose:
      - "8081"
    depends_on:
      - mongo
    networks:
      - mediscreen


  risk:
    build: ./mediscreen-risk/
    image: juanlfr/mediscreen_p9_oc/mediscreen-risk
    container_name: risk
    environment:
      - risk.feignNotesMicroserviceURL=notes
      - risk.feignRegisterMicroserviceURL=register
    ports:
      - "8082:8082"
    expose:
      - "8082"
    networks:
      - mediscreen

  register:
    build: ./mediscreen-register/
    image: juanlfr/mediscreen_p9_oc/mediscreen-register
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3307/mediscreen?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=user
      - spring.datasource.password=user
      - register.feignRiskMicroserviceURL=risk
      - register.feignNotesMicroserviceURL=notes
    container_name: register
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    expose:
      - "8080"
    networks:
      - mediscreen
networks:
  mediscreen: